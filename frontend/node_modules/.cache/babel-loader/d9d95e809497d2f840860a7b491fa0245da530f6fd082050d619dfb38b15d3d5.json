{"ast":null,"code":"var _jsxFileName = \"/Users/tejasvigaonkar/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js (Your code, updated with friend's features and your UI)\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Wallet, isAddress, parseEther, formatEther, JsonRpcProvider, Contract, parseUnits, formatUnits, Interface // <-- ADDED: For decoding transaction data\n} from \"ethers\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Your existing constants - no changes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERC20_ABI = [\"function balanceOf(address) view returns (uint256)\", \"function transfer(address to, uint256 value) returns (bool)\", \"function decimals() view returns (uint8)\", \"function symbol() view returns (string)\", \"event Transfer(address indexed from, address indexed to, uint256 value)\" // <-- ADDED: Event for decoding\n];\nconst provider = new JsonRpcProvider(\"https://bsc-testnet-dataseed.bnbchain.org\");\nconst TOKEN_ADDRESSES = {\n  USDT: \"0x787A697324dbA4AB965C58CD33c13ff5eeA6295F\",\n  USDC: \"0x342e3aA1248AB77E319e3331C6fD3f1F2d4B36B1\"\n};\nfunction App() {\n  _s();\n  var _txDetails$decodedLog;\n  // Your existing state variables - no changes\n  const [walletData, setWalletData] = useState(null);\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [balances, setBalances] = useState({\n    BNB: \"Loading...\",\n    USDT: \"N/A\",\n    USDC: \"N/A\"\n  });\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n  const [ledger, setLedger] = useState([]);\n  const [loading, setLoading] = useState({});\n  const [showPrivate, setShowPrivate] = useState(false);\n  const [showQR, setShowQR] = useState(true);\n  const qrRef = useRef();\n\n  // --- ADDED: State for new features from friend's code ---\n  const [showHistory, setShowHistory] = useState(false);\n  const [globalLedger, setGlobalLedger] = useState([]);\n\n  // Your existing helper functions - no changes\n  const setLoader = (key, value) => setLoading(prev => ({\n    ...prev,\n    [key]: value\n  }));\n  const notify = (msg, type = \"info\") => toast[type](msg);\n\n  // Your existing wallet functions - no changes needed\n  const generateAndSaveWallet = async () => {\n    if (!walletName.trim()) return notify(\"Enter a wallet name\", \"error\");\n    setLoader(\"creating\", true);\n    const wallet = Wallet.createRandom();\n    const newWallet = {\n      name: walletName,\n      address: wallet.address,\n      privateKey: wallet.privateKey,\n      mnemonic: wallet.mnemonic.phrase\n    };\n    try {\n      const res = await fetch(\"http://localhost:5001/api/wallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newWallet)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        notify(\"✅ Wallet saved!\", \"success\");\n        setWalletName(\"\");\n      } else {\n        notify(`❌ ${data.error || 'Save failed'}`, \"error\");\n      }\n    } catch {\n      notify(\"❌ Save error\", \"error\");\n    } finally {\n      setLoader(\"creating\", false);\n    }\n  };\n  const fetchWalletByName = async () => {\n    if (!searchName.trim()) return notify(\"Enter wallet name to fetch\", \"error\");\n    setLoader(\"fetching\", true);\n    setTxDetails(null); // Clear previous tx details\n    setShowHistory(false); // Hide history on new wallet load\n    try {\n      const res = await fetch(`http://localhost:5001/api/wallet/${searchName}`);\n      const data = await res.json();\n      if (data.error) {\n        notify(\"❌ Wallet not found\", \"error\");\n        setWalletData(null);\n        setLedger([]);\n      } else {\n        setWalletData(data);\n        fetchAllBalances(data.privateKey, data.address);\n        fetchLedger(data.address);\n      }\n    } catch {\n      notify(\"❌ Error fetching wallet\", \"error\");\n    } finally {\n      setLoader(\"fetching\", false);\n    }\n  };\n  const fetchAllBalances = async (privateKey, address) => {\n    // ... no changes to this function ...\n    setLoader(\"balance\", true);\n    try {\n      const wallet = new Wallet(privateKey, provider);\n      const bnb = await provider.getBalance(wallet.address);\n      const tokenBalances = await Promise.all(Object.entries(TOKEN_ADDRESSES).map(async ([symbol, addr]) => {\n        const tokenContract = new Contract(addr, ERC20_ABI, wallet);\n        const decimals = await tokenContract.decimals();\n        const bal = await tokenContract.balanceOf(wallet.address);\n        return [symbol, formatUnits(bal, decimals)];\n      }));\n      const all = Object.fromEntries(tokenBalances);\n      setBalances({\n        BNB: formatEther(bnb),\n        ...all\n      });\n    } catch (e) {\n      console.error(e);\n      setBalances({\n        BNB: \"Error\",\n        USDT: \"N/A\",\n        USDC: \"N/A\"\n      });\n    } finally {\n      setLoader(\"balance\", false);\n    }\n  };\n  const sendTokens = async () => {\n    // ... no changes to this function ...\n    if (!(walletData !== null && walletData !== void 0 && walletData.privateKey) || !isAddress(recipient) || !amount || parseFloat(amount) <= 0) return notify(\"❌ Invalid inputs\", \"error\");\n    setLoader(\"sending\", true);\n    try {\n      const wallet = new Wallet(walletData.privateKey, provider);\n      const bnbBalance = await provider.getBalance(wallet.address);\n      if (parseFloat(formatEther(bnbBalance)) < 0.001) return notify(\"❌ Not enough BNB for gas\", \"error\");\n      let tx;\n      if (tokenType === \"BNB\") {\n        tx = await wallet.sendTransaction({\n          to: recipient,\n          value: parseEther(amount)\n        });\n      } else {\n        const tokenContract = new Contract(TOKEN_ADDRESSES[tokenType], ERC20_ABI, wallet);\n        const decimals = await tokenContract.decimals();\n        tx = await tokenContract.transfer(recipient, parseUnits(amount, decimals));\n      }\n      await tx.wait();\n      notify(`✅ ${tokenType} Sent!`, \"success\");\n      navigator.clipboard.writeText(tx.hash);\n      logTransaction(tx.hash, walletData.address, recipient, amount, tokenType);\n      setRecipient(\"\");\n      setAmount(\"\");\n      fetchAllBalances(walletData.privateKey, walletData.address);\n    } catch (e) {\n      console.error(e);\n      notify(\"❌ Transaction failed\", \"error\");\n    } finally {\n      setLoader(\"sending\", false);\n    }\n  };\n  const logTransaction = async (hash, from, to, amount, token) => {\n    // ... no changes to this function ...\n    try {\n      await fetch(\"http://localhost:5001/api/ledger\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          walletAddress: from,\n          hash,\n          from,\n          to,\n          amount,\n          token\n        })\n      });\n      fetchLedger(from); // Refresh personal ledger\n      fetchGlobalLedger(); // Refresh global ledger\n    } catch (error) {\n      console.error(\"Failed to log transaction:\", error);\n      notify(\"Could not save Tx to ledger\", \"warn\");\n    }\n  };\n  const fetchLedger = async address => {\n    // ... no changes to this function ...\n    setLoader(\"ledger\", true);\n    try {\n      const res = await fetch(`http://localhost:5001/api/ledger/${address}`);\n      const data = await res.json();\n      setLedger(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error(\"Failed to fetch ledger:\", error);\n      setLedger([]);\n    } finally {\n      setLoader(\"ledger\", false);\n    }\n  };\n\n  // --- UPDATED: This function is now much more powerful, like your friend's ---\n  const fetchTransactionDetails = async () => {\n    if (!txHashInput) return;\n    setLoader(\"tx\", true);\n    setTxDetails(null);\n    try {\n      const tx = await provider.getTransaction(txHashInput);\n      const receipt = await provider.getTransactionReceipt(txHashInput);\n      if (!tx || !receipt) throw new Error(\"Transaction not found or not yet mined.\");\n\n      // This is the powerful decoding logic from your friend's code\n      const iface = new Interface(ERC20_ABI);\n      const decodedLogs = receipt.logs.map(log => {\n        try {\n          // Find which token this log belongs to\n          const tokenSymbol = Object.keys(TOKEN_ADDRESSES).find(key => TOKEN_ADDRESSES[key].toLowerCase() === log.address.toLowerCase());\n          if (!tokenSymbol) return null;\n          const parsedLog = iface.parseLog(log);\n          return {\n            ...parsedLog,\n            tokenSymbol,\n            // We need decimals for formatting, let's hardcode them based on our tokens\n            // A better approach would be fetching them, but this is fine.\n            formattedAmount: formatUnits(parsedLog.args.value, 18)\n          };\n        } catch {\n          return null;\n        }\n      }).filter(log => log !== null);\n      setTxDetails({\n        ...tx,\n        ...receipt,\n        decodedLogs\n      });\n    } catch (e) {\n      console.error(e);\n      notify(`❌ ${e.message || \"Invalid or failed to fetch\"}`, \"error\");\n    } finally {\n      setLoader(\"tx\", false);\n    }\n  };\n\n  // --- ADDED: New function to get the global ledger ---\n  const fetchGlobalLedger = async () => {\n    setLoader(\"globalLedger\", true);\n    try {\n      const res = await fetch(\"http://localhost:5001/api/ledger\");\n      const data = await res.json();\n      setGlobalLedger(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error(\"Failed to fetch global ledger:\", error);\n      setGlobalLedger([]);\n    } finally {\n      setLoader(\"globalLedger\", false);\n    }\n  };\n\n  // ADDED: Fetch global ledger on initial page load\n  useEffect(() => {\n    fetchGlobalLedger();\n  }, []);\n\n  // Your existing copy and download functions - no changes\n  const copyAddress = () => {\n    if (walletData !== null && walletData !== void 0 && walletData.address) {\n      navigator.clipboard.writeText(walletData.address);\n      notify(\"📋 Address copied\", \"info\");\n    }\n  };\n  const downloadQR = () => {\n    const canvas = qrRef.current.querySelector(\"canvas\");\n    const pngUrl = canvas.toDataURL(\"image/png\");\n    const a = document.createElement(\"a\");\n    a.href = pngUrl;\n    a.download = `${walletData.name}_qr.png`;\n    a.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"\\uD83E\\uDD9C Goan Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD83D\\uDD8A Create wallet name\",\n        value: walletName,\n        onChange: e => setWalletName(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateAndSaveWallet,\n        style: styles.buttonGreen,\n        children: loading.creating ? \"⏳ Saving...\" : \"✅ Generate & Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD83D\\uDD0D Load wallet by name\",\n        value: searchName,\n        onChange: e => setSearchName(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWalletByName,\n        style: styles.buttonBlue,\n        children: loading.fetching ? \"⏳ Loading...\" : \"📥 Load Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), walletData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.walletBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: walletData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: copyAddress,\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFE6 Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 66\n        }, this), \" \", walletData.address, \" \\uD83D\\uDCCB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDD11 Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 14\n        }, this), \" \", showPrivate ? walletData.privateKey : \"••••••••••••••••••••\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPrivate(!showPrivate),\n          style: styles.toggle,\n          children: showPrivate ? \"🙈 Hide\" : \"👁 Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Balances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: Object.entries(balances).map(([symbol, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [symbol === \"BNB\" ? \"💰\" : symbol === \"USDT\" ? \"💵\" : \"💸\", \" \", symbol, \":\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 156\n          }, this)]\n        }, symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 65\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowQR(!showQR),\n          style: styles.toggle,\n          children: showQR ? \"🙈 Hide QR\" : \"📱 Show QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), showQR && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: qrRef,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n            value: walletData.address,\n            size: 130,\n            bgColor: \"#ffffff\",\n            fgColor: \"#000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCF1 Scan to pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 162\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadQR,\n            style: styles.buttonBlue,\n            children: \"\\u2B07\\uFE0F Download QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 183\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE80 Send Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: tokenType,\n        onChange: e => setTokenType(e.target.value),\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BNB\",\n          children: \"BNB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USDT\",\n          children: \"USDT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USDC\",\n          children: \"USDC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD83D\\uDCE4 Recipient\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD83D\\uDCB0 Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTokens,\n        style: styles.buttonOrange,\n        children: loading.sending ? \"⏳ Sending...\" : \"🚀 Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDC Transaction Ledger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHistory(!showHistory),\n          style: styles.toggle,\n          children: showHistory ? 'Hide History' : 'Show History'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), showHistory && (loading.ledger ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ledger...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.ledgerContainer,\n        children: ledger.length > 0 ? ledger.map(tx => {\n          const isSent = tx.from.toLowerCase() === walletData.address.toLowerCase();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.ledgerTx,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: isSent ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#f97316'\n                  },\n                  children: \"[OUT]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#16a34a'\n                  },\n                  children: \"[IN]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://testnet.bscscan.com/tx/${tx.hash}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: `${tx.hash.substring(0, 10)}...`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isSent ? `To: ${tx.to.substring(0, 10)}...` : `From: ${tx.from.substring(0, 10)}...`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 30\n              }, this), \" \", tx.amount, \" \", tx.token]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 30\n              }, this), \" \", new Date(tx.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 27\n            }, this)]\n          }, tx.hash, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 23\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions recorded for this wallet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"\\uD83D\\uDCE6 Transaction Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD83D\\uDD0D Tx Hash\",\n        value: txHashInput,\n        onChange: e => setTxHashInput(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransactionDetails,\n        style: styles.buttonPurple,\n        children: loading.tx ? \"⏳ Fetching...\" : \"🔍 View Tx Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), txDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.txBox,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 18\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://testnet.bscscan.com/tx/${txDetails.hash}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: txDetails.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 18\n          }, this), \" \", txDetails.status === 1 ? \"✅ Success\" : \"❌ Failed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Block:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 18\n          }, this), \" \", txDetails.blockNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 18\n          }, this), \" \", txDetails.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 18\n          }, this), \" \", txDetails.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }, this), ((_txDetails$decodedLog = txDetails.decodedLogs) === null || _txDetails$decodedLog === void 0 ? void 0 : _txDetails$decodedLog.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            borderTop: '1px solid #374151',\n            paddingTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Token Transfers Detected:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }, this), txDetails.decodedLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#000',\n              padding: '10px',\n              borderRadius: '5px',\n              marginBottom: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"From:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 26\n              }, this), \" \", log.args.from]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"To:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 26\n              }, this), \" \", log.args.to]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 26\n              }, this), \" \", log.formattedAmount, \" \", log.tokenSymbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.walletBox,\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF0D Global Transaction Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Showing all transactions from all wallets.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), loading.globalLedger ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading global ledger...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.ledgerContainer,\n        children: globalLedger.length > 0 ? globalLedger.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.ledgerTx,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hash: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://testnet.bscscan.com/tx/${tx.hash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: `${tx.hash.substring(0, 10)}...`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 30\n            }, this), \" \", `${tx.from.substring(0, 12)}...`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 30\n            }, this), \" \", `${tx.to.substring(0, 12)}...`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 30\n            }, this), \" \", tx.amount, \" \", tx.token]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 30\n            }, this), \" \", new Date(tx.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 27\n          }, this)]\n        }, tx.hash, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 23\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions recorded in the global ledger yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n// Your existing styles - no changes\n_s(App, \"1lRN6b9g2AcyediuJuSI9XXFdSY=\");\n_c = App;\nconst styles = {\n  container: {\n    minHeight: \"100vh\",\n    background: \"linear-gradient(to right, #3b82f6, #9333ea)\",\n    padding: \"40px 20px\",\n    fontFamily: \"Segoe UI, sans-serif\",\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontSize: \"2.5rem\",\n    marginBottom: \"30px\"\n  },\n  section: {\n    marginBottom: \"25px\"\n  },\n  input: {\n    padding: \"12px\",\n    margin: \"10px\",\n    width: \"60%\",\n    maxWidth: \"400px\",\n    borderRadius: \"10px\",\n    border: \"none\",\n    fontSize: \"16px\",\n    backgroundColor: \"#f0f0f0\",\n    color: \"#111\"\n  },\n  buttonGreen: {\n    padding: \"12px 24px\",\n    backgroundColor: \"#16a34a\",\n    borderRadius: \"10px\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    border: 'none'\n  },\n  buttonBlue: {\n    padding: \"12px 24px\",\n    backgroundColor: \"#2563eb\",\n    borderRadius: \"10px\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n    marginTop: \"10px\",\n    cursor: \"pointer\",\n    border: 'none'\n  },\n  buttonOrange: {\n    padding: \"12px 24px\",\n    backgroundColor: \"#f97316\",\n    borderRadius: \"10px\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n    marginTop: \"10px\",\n    cursor: \"pointer\",\n    border: 'none'\n  },\n  buttonPurple: {\n    padding: \"12px 24px\",\n    backgroundColor: \"#9333ea\",\n    borderRadius: \"10px\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    border: 'none'\n  },\n  walletBox: {\n    backgroundColor: \"#1e293b\",\n    padding: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"12px\",\n    maxWidth: \"700px\",\n    marginInline: \"auto\",\n    textAlign: \"left\",\n    boxShadow: \"0 0 20px rgba(0,0,0,0.5)\"\n  },\n  txBox: {\n    marginTop: \"15px\",\n    fontSize: \"14px\",\n    background: \"#111827\",\n    padding: \"15px\",\n    borderRadius: \"8px\"\n  },\n  toggle: {\n    marginLeft: \"10px\",\n    padding: \"5px 10px\",\n    backgroundColor: \"#2563eb\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  ledgerContainer: {\n    maxHeight: '300px',\n    overflowY: 'auto',\n    backgroundColor: '#111827',\n    padding: '15px',\n    borderRadius: '8px',\n    marginTop: '10px'\n  },\n  ledgerTx: {\n    borderBottom: '1px solid #374151',\n    paddingBottom: '10px',\n    marginBottom: '10px',\n    fontSize: '14px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Wallet","isAddress","parseEther","formatEther","JsonRpcProvider","Contract","parseUnits","formatUnits","Interface","QRCodeCanvas","ToastContainer","toast","jsxDEV","_jsxDEV","ERC20_ABI","provider","TOKEN_ADDRESSES","USDT","USDC","App","_s","_txDetails$decodedLog","walletData","setWalletData","walletName","setWalletName","searchName","setSearchName","recipient","setRecipient","amount","setAmount","tokenType","setTokenType","balances","setBalances","BNB","txHashInput","setTxHashInput","txDetails","setTxDetails","ledger","setLedger","loading","setLoading","showPrivate","setShowPrivate","showQR","setShowQR","qrRef","showHistory","setShowHistory","globalLedger","setGlobalLedger","setLoader","key","value","prev","notify","msg","type","generateAndSaveWallet","trim","wallet","createRandom","newWallet","name","address","privateKey","mnemonic","phrase","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","fetchWalletByName","fetchAllBalances","fetchLedger","bnb","getBalance","tokenBalances","Promise","all","Object","entries","map","symbol","addr","tokenContract","decimals","bal","balanceOf","fromEntries","e","console","sendTokens","parseFloat","bnbBalance","tx","sendTransaction","to","transfer","wait","navigator","clipboard","writeText","hash","logTransaction","from","token","walletAddress","fetchGlobalLedger","Array","isArray","fetchTransactionDetails","getTransaction","receipt","getTransactionReceipt","Error","iface","decodedLogs","logs","log","tokenSymbol","keys","find","toLowerCase","parsedLog","parseLog","formattedAmount","args","filter","message","copyAddress","downloadQR","canvas","current","querySelector","pngUrl","toDataURL","a","document","createElement","href","download","click","style","styles","container","children","position","autoClose","hideProgressBar","fileName","_jsxFileName","lineNumber","columnNumber","title","section","placeholder","onChange","target","input","onClick","buttonGreen","creating","buttonBlue","fetching","walletBox","cursor","toggle","listStyle","padding","marginTop","ref","size","bgColor","fgColor","buttonOrange","sending","display","alignItems","ledgerContainer","length","isSent","ledgerTx","color","rel","substring","Date","createdAt","toLocaleString","buttonPurple","txBox","status","blockNumber","borderTop","paddingTop","margin","index","background","borderRadius","marginBottom","_c","minHeight","fontFamily","textAlign","fontSize","width","maxWidth","border","backgroundColor","fontWeight","marginInline","boxShadow","marginLeft","maxHeight","overflowY","borderBottom","paddingBottom","$RefreshReg$"],"sources":["/Users/tejasvigaonkar/my-app/src/App.js"],"sourcesContent":["// App.js (Your code, updated with friend's features and your UI)\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Wallet,\n  isAddress,\n  parseEther,\n  formatEther,\n  JsonRpcProvider,\n  Contract,\n  parseUnits,\n  formatUnits,\n  Interface, // <-- ADDED: For decoding transaction data\n} from \"ethers\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Your existing constants - no changes\nconst ERC20_ABI = [\n  \"function balanceOf(address) view returns (uint256)\",\n  \"function transfer(address to, uint256 value) returns (bool)\",\n  \"function decimals() view returns (uint8)\",\n  \"function symbol() view returns (string)\",\n  \"event Transfer(address indexed from, address indexed to, uint256 value)\", // <-- ADDED: Event for decoding\n];\nconst provider = new JsonRpcProvider(\"https://bsc-testnet-dataseed.bnbchain.org\");\nconst TOKEN_ADDRESSES = {\n  USDT: \"0x787A697324dbA4AB965C58CD33c13ff5eeA6295F\",\n  USDC: \"0x342e3aA1248AB77E319e3331C6fD3f1F2d4B36B1\",\n};\n\nfunction App() {\n  // Your existing state variables - no changes\n  const [walletData, setWalletData] = useState(null);\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [balances, setBalances] = useState({ BNB: \"Loading...\", USDT: \"N/A\", USDC: \"N/A\" });\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n  const [ledger, setLedger] = useState([]);\n  const [loading, setLoading] = useState({});\n  const [showPrivate, setShowPrivate] = useState(false);\n  const [showQR, setShowQR] = useState(true);\n  const qrRef = useRef();\n  \n  // --- ADDED: State for new features from friend's code ---\n  const [showHistory, setShowHistory] = useState(false);\n  const [globalLedger, setGlobalLedger] = useState([]);\n\n\n  // Your existing helper functions - no changes\n  const setLoader = (key, value) => setLoading((prev) => ({ ...prev, [key]: value }));\n  const notify = (msg, type = \"info\") => toast[type](msg);\n\n  // Your existing wallet functions - no changes needed\n  const generateAndSaveWallet = async () => {\n    if (!walletName.trim()) return notify(\"Enter a wallet name\", \"error\");\n    setLoader(\"creating\", true);\n    const wallet = Wallet.createRandom();\n    const newWallet = { name: walletName, address: wallet.address, privateKey: wallet.privateKey, mnemonic: wallet.mnemonic.phrase };\n    try {\n      const res = await fetch(\"http://localhost:5001/api/wallet\", {\n        method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify(newWallet),\n      });\n      const data = await res.json();\n      if (res.ok) { notify(\"✅ Wallet saved!\", \"success\"); setWalletName(\"\"); } \n      else { notify(`❌ ${data.error || 'Save failed'}`, \"error\"); }\n    } catch { notify(\"❌ Save error\", \"error\"); } \n    finally { setLoader(\"creating\", false); }\n  };\n\n  const fetchWalletByName = async () => {\n    if (!searchName.trim()) return notify(\"Enter wallet name to fetch\", \"error\");\n    setLoader(\"fetching\", true);\n    setTxDetails(null); // Clear previous tx details\n    setShowHistory(false); // Hide history on new wallet load\n    try {\n      const res = await fetch(`http://localhost:5001/api/wallet/${searchName}`);\n      const data = await res.json();\n      if (data.error) {\n        notify(\"❌ Wallet not found\", \"error\");\n        setWalletData(null);\n        setLedger([]);\n      } else {\n        setWalletData(data);\n        fetchAllBalances(data.privateKey, data.address);\n        fetchLedger(data.address);\n      }\n    } catch { notify(\"❌ Error fetching wallet\", \"error\"); } \n    finally { setLoader(\"fetching\", false); }\n  };\n\n  const fetchAllBalances = async (privateKey, address) => {\n    // ... no changes to this function ...\n    setLoader(\"balance\", true);\n    try {\n      const wallet = new Wallet(privateKey, provider);\n      const bnb = await provider.getBalance(wallet.address);\n      const tokenBalances = await Promise.all(\n        Object.entries(TOKEN_ADDRESSES).map(async ([symbol, addr]) => {\n          const tokenContract = new Contract(addr, ERC20_ABI, wallet);\n          const decimals = await tokenContract.decimals();\n          const bal = await tokenContract.balanceOf(wallet.address);\n          return [symbol, formatUnits(bal, decimals)];\n        })\n      );\n      const all = Object.fromEntries(tokenBalances);\n      setBalances({ BNB: formatEther(bnb), ...all });\n    } catch (e) {\n      console.error(e);\n      setBalances({ BNB: \"Error\", USDT: \"N/A\", USDC: \"N/A\" });\n    } finally {\n      setLoader(\"balance\", false);\n    }\n  };\n\n  const sendTokens = async () => {\n    // ... no changes to this function ...\n    if (!walletData?.privateKey || !isAddress(recipient) || !amount || parseFloat(amount) <= 0)\n      return notify(\"❌ Invalid inputs\", \"error\");\n    setLoader(\"sending\", true);\n    try {\n      const wallet = new Wallet(walletData.privateKey, provider);\n      const bnbBalance = await provider.getBalance(wallet.address);\n      if (parseFloat(formatEther(bnbBalance)) < 0.001) return notify(\"❌ Not enough BNB for gas\", \"error\");\n      let tx;\n      if (tokenType === \"BNB\") {\n        tx = await wallet.sendTransaction({ to: recipient, value: parseEther(amount) });\n      } else {\n        const tokenContract = new Contract(TOKEN_ADDRESSES[tokenType], ERC20_ABI, wallet);\n        const decimals = await tokenContract.decimals();\n        tx = await tokenContract.transfer(recipient, parseUnits(amount, decimals));\n      }\n      await tx.wait();\n      notify(`✅ ${tokenType} Sent!`, \"success\");\n      navigator.clipboard.writeText(tx.hash);\n      logTransaction(tx.hash, walletData.address, recipient, amount, tokenType);\n      setRecipient(\"\");\n      setAmount(\"\");\n      fetchAllBalances(walletData.privateKey, walletData.address);\n    } catch (e) {\n      console.error(e);\n      notify(\"❌ Transaction failed\", \"error\");\n    } finally {\n      setLoader(\"sending\", false);\n    }\n  };\n\n  const logTransaction = async (hash, from, to, amount, token) => {\n    // ... no changes to this function ...\n    try {\n      await fetch(\"http://localhost:5001/api/ledger\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ walletAddress: from, hash, from, to, amount, token }),\n      });\n      fetchLedger(from); // Refresh personal ledger\n      fetchGlobalLedger(); // Refresh global ledger\n    } catch (error) {\n      console.error(\"Failed to log transaction:\", error);\n      notify(\"Could not save Tx to ledger\", \"warn\");\n    }\n  };\n\n  const fetchLedger = async (address) => {\n    // ... no changes to this function ...\n    setLoader(\"ledger\", true);\n    try {\n      const res = await fetch(`http://localhost:5001/api/ledger/${address}`);\n      const data = await res.json();\n      setLedger(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error(\"Failed to fetch ledger:\", error);\n      setLedger([]);\n    } finally {\n      setLoader(\"ledger\", false);\n    }\n  };\n  \n  // --- UPDATED: This function is now much more powerful, like your friend's ---\n  const fetchTransactionDetails = async () => {\n    if (!txHashInput) return;\n    setLoader(\"tx\", true);\n    setTxDetails(null);\n    try {\n        const tx = await provider.getTransaction(txHashInput);\n        const receipt = await provider.getTransactionReceipt(txHashInput);\n        if (!tx || !receipt) throw new Error(\"Transaction not found or not yet mined.\");\n\n        // This is the powerful decoding logic from your friend's code\n        const iface = new Interface(ERC20_ABI);\n        const decodedLogs = receipt.logs.map(log => {\n            try {\n                // Find which token this log belongs to\n                const tokenSymbol = Object.keys(TOKEN_ADDRESSES).find(\n                    key => TOKEN_ADDRESSES[key].toLowerCase() === log.address.toLowerCase()\n                );\n                if (!tokenSymbol) return null;\n\n                const parsedLog = iface.parseLog(log);\n                return {\n                    ...parsedLog,\n                    tokenSymbol,\n                    // We need decimals for formatting, let's hardcode them based on our tokens\n                    // A better approach would be fetching them, but this is fine.\n                    formattedAmount: formatUnits(parsedLog.args.value, 18) \n                };\n            } catch { return null; }\n        }).filter(log => log !== null);\n\n        setTxDetails({ ...tx, ...receipt, decodedLogs });\n\n    } catch (e) {\n        console.error(e);\n        notify(`❌ ${e.message || \"Invalid or failed to fetch\"}`, \"error\");\n    } finally {\n        setLoader(\"tx\", false);\n    }\n  };\n\n  // --- ADDED: New function to get the global ledger ---\n  const fetchGlobalLedger = async () => {\n    setLoader(\"globalLedger\", true);\n    try {\n      const res = await fetch(\"http://localhost:5001/api/ledger\");\n      const data = await res.json();\n      setGlobalLedger(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error(\"Failed to fetch global ledger:\", error);\n      setGlobalLedger([]);\n    } finally {\n      setLoader(\"globalLedger\", false);\n    }\n  };\n  \n  // ADDED: Fetch global ledger on initial page load\n  useEffect(() => {\n    fetchGlobalLedger();\n  }, []);\n  \n  // Your existing copy and download functions - no changes\n  const copyAddress = () => {\n    if (walletData?.address) {\n      navigator.clipboard.writeText(walletData.address);\n      notify(\"📋 Address copied\", \"info\");\n    }\n  };\n  const downloadQR = () => {\n    const canvas = qrRef.current.querySelector(\"canvas\");\n    const pngUrl = canvas.toDataURL(\"image/png\");\n    const a = document.createElement(\"a\");\n    a.href = pngUrl;\n    a.download = `${walletData.name}_qr.png`;\n    a.click();\n  };\n\n\n  return (\n    <div style={styles.container}>\n      <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\n      <h1 style={styles.title}>🦜 Goan Wallet</h1>\n\n      {/* --- Your existing Create and Load sections - no changes --- */}\n      <section style={styles.section}>\n        <input placeholder=\"🖊 Create wallet name\" value={walletName} onChange={(e) => setWalletName(e.target.value)} style={styles.input} />\n        <button onClick={generateAndSaveWallet} style={styles.buttonGreen}>{loading.creating ? \"⏳ Saving...\" : \"✅ Generate & Save\"}</button>\n      </section>\n      <section style={styles.section}>\n        <input placeholder=\"🔍 Load wallet by name\" value={searchName} onChange={(e) => setSearchName(e.target.value)} style={styles.input} />\n        <button onClick={fetchWalletByName} style={styles.buttonBlue}>{loading.fetching ? \"⏳ Loading...\" : \"📥 Load Wallet\"}</button>\n      </section>\n\n      {/* --- Your existing Wallet Details section - with updates --- */}\n      {walletData && (\n        <div style={styles.walletBox}>\n          {/* ... your existing name, address, private key display ... */}\n          <h2>{walletData.name}</h2>\n          <p onClick={copyAddress} style={{ cursor: \"pointer\" }}><strong>🏦 Address:</strong> {walletData.address} 📋</p>\n          <p><strong>🔑 Private Key:</strong>{\" \"}{showPrivate ? walletData.privateKey : \"••••••••••••••••••••\"}\n            <button onClick={() => setShowPrivate(!showPrivate)} style={styles.toggle}>{showPrivate ? \"🙈 Hide\" : \"👁 Show\"}</button>\n          </p>\n\n          {/* ... your existing balances display ... */}\n          <h3>📊 Balances</h3>\n          <ul style={{ listStyle: \"none\", padding: 0 }}>\n            {Object.entries(balances).map(([symbol, value]) => (<li key={symbol}>{symbol === \"BNB\" ? \"💰\" : symbol === \"USDT\" ? \"💵\" : \"💸\"} {symbol}:{\" \"}<strong>{value}</strong></li>))}\n          </ul>\n\n          {/* ... your existing QR code display ... */}\n          <div style={{ marginTop: \"20px\" }}>\n            <button onClick={() => setShowQR(!showQR)} style={styles.toggle}>{showQR ? \"🙈 Hide QR\" : \"📱 Show QR\"}</button>\n            {showQR && (<div ref={qrRef} style={{ marginTop: \"10px\" }}><QRCodeCanvas value={walletData.address} size={130} bgColor=\"#ffffff\" fgColor=\"#000000\" /><p>📱 Scan to pay</p><button onClick={downloadQR} style={styles.buttonBlue}>⬇️ Download QR</button></div>)}\n          </div>\n\n          {/* ... your existing Send Tokens section ... */}\n          <h3>🚀 Send Tokens</h3>\n          <select value={tokenType} onChange={(e) => setTokenType(e.target.value)} style={styles.input}>\n            <option value=\"BNB\">BNB</option><option value=\"USDT\">USDT</option><option value=\"USDC\">USDC</option>\n          </select>\n          <input placeholder=\"📤 Recipient\" value={recipient} onChange={(e) => setRecipient(e.target.value)} style={styles.input} />\n          <input placeholder=\"💰 Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} style={styles.input} />\n          <button onClick={sendTokens} style={styles.buttonOrange}>{loading.sending ? \"⏳ Sending...\" : \"🚀 Send\"}</button>\n          \n          {/* --- UPDATED: Transaction Ledger now has a toggle button --- */}\n          <div style={{display: 'flex', alignItems: 'center', marginTop: \"20px\"}}>\n            <h3>📜 Transaction Ledger</h3>\n            <button onClick={() => setShowHistory(!showHistory)} style={styles.toggle}>\n                {showHistory ? 'Hide History' : 'Show History'}\n            </button>\n          </div>\n          \n          {/* --- UPDATED: Ledger is now conditionally rendered --- */}\n          {showHistory && (\n              loading.ledger ? <p>Loading ledger...</p> : (\n              <div style={styles.ledgerContainer}>\n                {ledger.length > 0 ? (\n                  ledger.map((tx) => {\n                    const isSent = tx.from.toLowerCase() === walletData.address.toLowerCase();\n                    return (\n                      <div key={tx.hash} style={styles.ledgerTx}>\n                          <p><strong>{isSent ? <span style={{color: '#f97316'}}>[OUT]</span> : <span style={{color: '#16a34a'}}>[IN]</span>}</strong>\n                            <a href={`https://testnet.bscscan.com/tx/${tx.hash}`} target=\"_blank\" rel=\"noopener noreferrer\">{`${tx.hash.substring(0, 10)}...`}</a>\n                          </p>\n                          <p>{isSent ? `To: ${tx.to.substring(0, 10)}...` : `From: ${tx.from.substring(0, 10)}...`}</p>\n                          <p><strong>Amount:</strong> {tx.amount} {tx.token}</p>\n                          <p><strong>Date:</strong> {new Date(tx.createdAt).toLocaleString()}</p>\n                      </div>\n                    )\n                  })\n                ) : ( <p>No transactions recorded for this wallet.</p> )}\n              </div>\n            )\n          )}\n\n          {/* --- UPDATED: Transaction Info section now shows decoded logs --- */}\n          <h4 style={{ marginTop: \"20px\" }}>📦 Transaction Info</h4>\n          <input placeholder=\"🔍 Tx Hash\" value={txHashInput} onChange={(e) => setTxHashInput(e.target.value)} style={styles.input}/>\n          <button onClick={fetchTransactionDetails} style={styles.buttonPurple}>{loading.tx ? \"⏳ Fetching...\" : \"🔍 View Tx Info\"}</button>\n          {txDetails && (\n            <div style={styles.txBox}>\n              <p><strong>Hash:</strong> <a href={`https://testnet.bscscan.com/tx/${txDetails.hash}`} target=\"_blank\" rel=\"noopener noreferrer\">{txDetails.hash}</a></p>\n              <p><strong>Status:</strong> {txDetails.status === 1 ? \"✅ Success\" : \"❌ Failed\"}</p>\n              <p><strong>Block:</strong> {txDetails.blockNumber}</p>\n              <p><strong>From:</strong> {txDetails.from}</p>\n              <p><strong>To:</strong> {txDetails.to}</p>\n              {txDetails.decodedLogs?.length > 0 && (\n                <div style={{marginTop: '15px', borderTop: '1px solid #374151', paddingTop: '10px'}}>\n                  <h5 style={{margin: '0 0 10px 0'}}><strong>Token Transfers Detected:</strong></h5>\n                  {txDetails.decodedLogs.map((log, index) => (\n                    <div key={index} style={{background: '#000', padding: '10px', borderRadius: '5px', marginBottom: '5px'}}>\n                      <p><strong>From:</strong> {log.args.from}</p>\n                      <p><strong>To:</strong> {log.args.to}</p>\n                      <p><strong>Amount:</strong> {log.formattedAmount} {log.tokenSymbol}</p>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* --- ADDED: Global Ledger section from friend's backend --- */}\n      <div style={{...styles.walletBox, marginTop: \"30px\"}}>\n        <h3>🌍 Global Transaction Ledger</h3>\n        <p>Showing all transactions from all wallets.</p>\n        {loading.globalLedger ? <p>Loading global ledger...</p> : (\n              <div style={styles.ledgerContainer}>\n                {globalLedger.length > 0 ? (\n                  globalLedger.map((tx) => (\n                      <div key={tx.hash} style={styles.ledgerTx}>\n                          <p><strong>Hash: </strong><a href={`https://testnet.bscscan.com/tx/${tx.hash}`} target=\"_blank\" rel=\"noopener noreferrer\">{`${tx.hash.substring(0, 10)}...`}</a></p>\n                          <p><strong>From:</strong> {`${tx.from.substring(0, 12)}...`}</p>\n                          <p><strong>To:</strong> {`${tx.to.substring(0, 12)}...`}</p>\n                          <p><strong>Amount:</strong> {tx.amount} {tx.token}</p>\n                          <p><strong>Date:</strong> {new Date(tx.createdAt).toLocaleString()}</p>\n                      </div>\n                  ))\n                ) : (\n                  <p>No transactions recorded in the global ledger yet.</p>\n                )}\n              </div>\n            )}\n      </div>\n    </div>\n  );\n}\n\n// Your existing styles - no changes\nconst styles = {\n  container: { minHeight: \"100vh\", background: \"linear-gradient(to right, #3b82f6, #9333ea)\", padding: \"40px 20px\", fontFamily: \"Segoe UI, sans-serif\", color: \"#fff\", textAlign: \"center\", },\n  title: { fontSize: \"2.5rem\", marginBottom: \"30px\", },\n  section: { marginBottom: \"25px\", },\n  input: { padding: \"12px\", margin: \"10px\", width: \"60%\", maxWidth: \"400px\", borderRadius: \"10px\", border: \"none\", fontSize: \"16px\", backgroundColor: \"#f0f0f0\", color: \"#111\", },\n  buttonGreen: { padding: \"12px 24px\", backgroundColor: \"#16a34a\", borderRadius: \"10px\", color: \"#fff\", fontWeight: \"bold\", fontSize: \"16px\", cursor: \"pointer\", border: 'none'},\n  buttonBlue: { padding: \"12px 24px\", backgroundColor: \"#2563eb\", borderRadius: \"10px\", color: \"#fff\", fontWeight: \"bold\", fontSize: \"16px\", marginTop: \"10px\", cursor: \"pointer\", border: 'none' },\n  buttonOrange: { padding: \"12px 24px\", backgroundColor: \"#f97316\", borderRadius: \"10px\", color: \"#fff\", fontWeight: \"bold\", fontSize: \"16px\", marginTop: \"10px\", cursor: \"pointer\", border: 'none' },\n  buttonPurple: { padding: \"12px 24px\", backgroundColor: \"#9333ea\", borderRadius: \"10px\", color: \"#fff\", fontWeight: \"bold\", fontSize: \"16px\", cursor: \"pointer\", border: 'none' },\n  walletBox: { backgroundColor: \"#1e293b\", padding: \"30px\", marginTop: \"30px\", borderRadius: \"12px\", maxWidth: \"700px\", marginInline: \"auto\", textAlign: \"left\", boxShadow: \"0 0 20px rgba(0,0,0,0.5)\", },\n  txBox: { marginTop: \"15px\", fontSize: \"14px\", background: \"#111827\", padding: \"15px\", borderRadius: \"8px\", },\n  toggle: { marginLeft: \"10px\", padding: \"5px 10px\", backgroundColor: \"#2563eb\", color: \"#fff\", border: \"none\", borderRadius: \"6px\", cursor: \"pointer\", },\n  ledgerContainer: { maxHeight: '300px', overflowY: 'auto', backgroundColor: '#111827', padding: '15px', borderRadius: '8px', marginTop: '10px', },\n  ledgerTx: { borderBottom: '1px solid #374151', paddingBottom: '10px', marginBottom: '10px', fontSize: '14px', },\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
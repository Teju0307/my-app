{"ast":null,"code":"var _jsxFileName = \"/Users/tejasvigaonkar/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\n// ✅ Inline minimal ERC20 ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERC20_ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function transfer(address to, uint amount) returns (bool)\", \"function decimals() view returns (uint8)\"];\nexport default function App() {\n  _s();\n  const [wallets, setWallets] = useState({});\n  const [walletName, setWalletName] = useState('');\n  const [selectedWallet, setSelectedWallet] = useState('');\n  const [bnbBalance, setBNBBalance] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const [tokenType, setTokenType] = useState('ERC20');\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n\n  // ✅ Replace this with your ERC20 token contract address on BSC Testnet\n  const ERC20_ADDRESS = '0x787A697324dbA4AB965C58CD33c13ff5eeA6295F'; // YOUR TOKEN HERE\n\n  const provider = new ethers.JsonRpcProvider('https://data-seed-prebsc-1-s1.binance.org:8545');\n  const generateWallet = () => {\n    const wallet = ethers.Wallet.createRandom();\n    const newWallets = {\n      ...wallets,\n      [walletName]: {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      }\n    };\n    setWallets(newWallets);\n    alert(`Wallet generated for ${walletName}`);\n  };\n  const getSigner = () => {\n    if (!selectedWallet || !wallets[selectedWallet]) {\n      alert('Select a valid wallet!');\n      return null;\n    }\n    return new ethers.Wallet(wallets[selectedWallet].privateKey, provider);\n  };\n  const loadWallet = () => {\n    if (!wallets[walletName]) {\n      alert('Wallet not found');\n      return;\n    }\n    setSelectedWallet(walletName);\n    setBNBBalance('');\n    setTokenBalance('');\n    setTxHash('');\n  };\n  const refreshBNBBalance = async () => {\n    var _wallets$selectedWall;\n    const address = (_wallets$selectedWall = wallets[selectedWallet]) === null || _wallets$selectedWall === void 0 ? void 0 : _wallets$selectedWall.address;\n    if (!address) return;\n    const balance = await provider.getBalance(address);\n    setBNBBalance(ethers.formatEther(balance));\n  };\n  const fetchTokenBalance = async () => {\n    if (!ERC20_ADDRESS) return;\n    const wallet = getSigner();\n    if (!wallet) return;\n    const contract = new ethers.Contract(ERC20_ADDRESS, ERC20_ABI, wallet);\n    const balance = await contract.balanceOf(wallet.address);\n    const decimals = await contract.decimals();\n    setTokenBalance(ethers.formatUnits(balance, decimals));\n  };\n  const sendToken = async () => {\n    if (!ERC20_ADDRESS || !recipient || !amount) {\n      alert('Fill all token fields');\n      return;\n    }\n    const signer = getSigner();\n    if (!signer) return;\n    const contract = new ethers.Contract(ERC20_ADDRESS, ERC20_ABI, signer);\n    try {\n      const decimals = await contract.decimals();\n      const tx = await contract.transfer(recipient, ethers.parseUnits(amount, decimals));\n      await tx.wait();\n      setTxHash(tx.hash);\n      alert('✅ Transaction Successful!');\n      fetchTokenBalance();\n    } catch (err) {\n      console.error(err);\n      alert(`❌ Transaction failed\\n\\n${err.message}`);\n    }\n  };\n  const viewTransaction = async () => {\n    if (!txHash) return;\n    const tx = await provider.getTransaction(txHash);\n    alert(JSON.stringify(tx, null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'monospace',\n      backgroundColor: '#111',\n      color: '#fff',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDE99 Goan Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Wallet name\",\n      value: walletName,\n      onChange: e => setWalletName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateWallet,\n      children: \"Generate Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadWallet,\n      children: \"Load Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedWallet && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDCCC \", selectedWallet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD11 Address: \", wallets[selectedWallet].address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD10 Private Key: \", wallets[selectedWallet].privateKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDDE0 Mnemonic: \", wallets[selectedWallet].mnemonic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"BNB: \", bnbBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshBNBBalance,\n        children: \"Refresh BNB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE80 Send Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: tokenType,\n        onChange: e => setTokenType(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ERC20\",\n          children: \"ERC20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDFAF Token: \", ERC20_ADDRESS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTokenBalance,\n        children: \"Check Token Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", tokenBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Recipient address\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendToken,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD0D View Tx Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Transaction Hash\",\n        value: txHash,\n        onChange: e => setTxHash(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: viewTransaction,\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ep+KaVzHRXghGPSROxKCjJEQFdo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","ERC20_ABI","App","_s","wallets","setWallets","walletName","setWalletName","selectedWallet","setSelectedWallet","bnbBalance","setBNBBalance","tokenBalance","setTokenBalance","txHash","setTxHash","tokenType","setTokenType","recipient","setRecipient","amount","setAmount","ERC20_ADDRESS","provider","JsonRpcProvider","generateWallet","wallet","Wallet","createRandom","newWallets","address","privateKey","mnemonic","phrase","alert","getSigner","loadWallet","refreshBNBBalance","_wallets$selectedWall","balance","getBalance","formatEther","fetchTokenBalance","contract","Contract","balanceOf","decimals","formatUnits","sendToken","signer","tx","transfer","parseUnits","wait","hash","err","console","error","message","viewTransaction","getTransaction","JSON","stringify","style","padding","fontFamily","backgroundColor","color","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/tejasvigaonkar/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\n// ✅ Inline minimal ERC20 ABI\nconst ERC20_ABI = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function transfer(address to, uint amount) returns (bool)\",\n  \"function decimals() view returns (uint8)\"\n];\n\nexport default function App() {\n  const [wallets, setWallets] = useState({});\n  const [walletName, setWalletName] = useState('');\n  const [selectedWallet, setSelectedWallet] = useState('');\n  const [bnbBalance, setBNBBalance] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const [tokenType, setTokenType] = useState('ERC20');\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n\n  // ✅ Replace this with your ERC20 token contract address on BSC Testnet\n  const ERC20_ADDRESS = '0x787A697324dbA4AB965C58CD33c13ff5eeA6295F'; // YOUR TOKEN HERE\n\n  const provider = new ethers.JsonRpcProvider('https://data-seed-prebsc-1-s1.binance.org:8545');\n\n  const generateWallet = () => {\n    const wallet = ethers.Wallet.createRandom();\n    const newWallets = {\n      ...wallets,\n      [walletName]: {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      }\n    };\n    setWallets(newWallets);\n    alert(`Wallet generated for ${walletName}`);\n  };\n\n  const getSigner = () => {\n    if (!selectedWallet || !wallets[selectedWallet]) {\n      alert('Select a valid wallet!');\n      return null;\n    }\n    return new ethers.Wallet(wallets[selectedWallet].privateKey, provider);\n  };\n\n  const loadWallet = () => {\n    if (!wallets[walletName]) {\n      alert('Wallet not found');\n      return;\n    }\n    setSelectedWallet(walletName);\n    setBNBBalance('');\n    setTokenBalance('');\n    setTxHash('');\n  };\n\n  const refreshBNBBalance = async () => {\n    const address = wallets[selectedWallet]?.address;\n    if (!address) return;\n    const balance = await provider.getBalance(address);\n    setBNBBalance(ethers.formatEther(balance));\n  };\n\n  const fetchTokenBalance = async () => {\n    if (!ERC20_ADDRESS) return;\n    const wallet = getSigner();\n    if (!wallet) return;\n    const contract = new ethers.Contract(ERC20_ADDRESS, ERC20_ABI, wallet);\n    const balance = await contract.balanceOf(wallet.address);\n    const decimals = await contract.decimals();\n    setTokenBalance(ethers.formatUnits(balance, decimals));\n  };\n\n  const sendToken = async () => {\n    if (!ERC20_ADDRESS || !recipient || !amount) {\n      alert('Fill all token fields');\n      return;\n    }\n\n    const signer = getSigner();\n    if (!signer) return;\n\n    const contract = new ethers.Contract(ERC20_ADDRESS, ERC20_ABI, signer);\n    try {\n      const decimals = await contract.decimals();\n      const tx = await contract.transfer(recipient, ethers.parseUnits(amount, decimals));\n      await tx.wait();\n      setTxHash(tx.hash);\n      alert('✅ Transaction Successful!');\n      fetchTokenBalance();\n    } catch (err) {\n      console.error(err);\n      alert(`❌ Transaction failed\\n\\n${err.message}`);\n    }\n  };\n\n  const viewTransaction = async () => {\n    if (!txHash) return;\n    const tx = await provider.getTransaction(txHash);\n    alert(JSON.stringify(tx, null, 2));\n  };\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'monospace', backgroundColor: '#111', color: '#fff', minHeight: '100vh' }}>\n      <h2>🪙 Goan Wallet</h2>\n\n      <input placeholder=\"Wallet name\" value={walletName} onChange={e => setWalletName(e.target.value)} />\n      <button onClick={generateWallet}>Generate Wallet</button>\n      <button onClick={loadWallet}>Load Wallet</button>\n\n      {selectedWallet && (\n        <div style={{ marginTop: 20 }}>\n          <h3>📌 {selectedWallet}</h3>\n          <p>🔑 Address: {wallets[selectedWallet].address}</p>\n          <p>🔐 Private Key: {wallets[selectedWallet].privateKey}</p>\n          <p>🧠 Mnemonic: {wallets[selectedWallet].mnemonic}</p>\n          <p>BNB: {bnbBalance}</p>\n          <button onClick={refreshBNBBalance}>Refresh BNB</button>\n        </div>\n      )}\n\n      <div style={{ marginTop: 30 }}>\n        <h3>🚀 Send Tokens</h3>\n        <select value={tokenType} onChange={e => setTokenType(e.target.value)}>\n          <option value=\"ERC20\">ERC20</option>\n        </select>\n        <p>🎯 Token: {ERC20_ADDRESS}</p>\n        <button onClick={fetchTokenBalance}>Check Token Balance</button>\n        <p>Balance: {tokenBalance}</p>\n        <input placeholder=\"Recipient address\" value={recipient} onChange={e => setRecipient(e.target.value)} />\n        <input placeholder=\"Amount\" value={amount} onChange={e => setAmount(e.target.value)} />\n        <button onClick={sendToken}>Send</button>\n      </div>\n\n      <div style={{ marginTop: 30 }}>\n        <h3>🔍 View Tx Details</h3>\n        <input placeholder=\"Transaction Hash\" value={txHash} onChange={e => setTxHash(e.target.value)} />\n        <button onClick={viewTransaction}>View</button>\n      </div>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
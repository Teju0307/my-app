{"ast":null,"code":"var _jsxFileName = \"/Users/tejasvigaonkar/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Wallet, isAddress, parseEther, formatEther, JsonRpcProvider, Contract, parseUnits, formatUnits } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ERC20_ABI = [\"function balanceOf(address) view returns (uint256)\", \"function transfer(address to, uint256 amount) returns (bool)\", \"function decimals() view returns (uint8)\", \"function symbol() view returns (string)\"];\nconst provider = new JsonRpcProvider(\"https://bsc-testnet.publicnode.com\");\nconst USDT_ADDRESS = \"0x7ef95a0Fe8fE1fBf9fcdAE4D9b62b2d0D8959B8A\"; // BSC testnet USDT\n\nfunction App() {\n  _s();\n  var _txDetails$gasUsed;\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [walletData, setWalletData] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenDecimals, setTokenDecimals] = useState(18);\n  const [tokenBalance, setTokenBalance] = useState(\"N/A\");\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n  const generateWallet = async () => {\n    if (!walletName.trim()) return alert(\"Enter wallet name\");\n    const wallet = Wallet.createRandom();\n    const newWallet = {\n      name: walletName,\n      address: wallet.address,\n      privateKey: wallet.privateKey,\n      mnemonic: wallet.mnemonic.phrase\n    };\n    try {\n      await fetch(\"http://localhost:5001/api/wallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newWallet)\n      });\n      alert(\"✅ Wallet created & saved\");\n      setWalletName(\"\");\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ Wallet save failed\");\n    }\n  };\n  const loadWallet = async () => {\n    try {\n      const res = await fetch(`http://localhost:5001/api/wallet/${searchName}`);\n      const data = await res.json();\n      if (data.error) return alert(\"❌ Wallet not found\");\n      setWalletData(data);\n      fetchBNBBalance(data.privateKey);\n    } catch (err) {\n      alert(\"❌ Failed to load wallet\");\n    }\n  };\n  const fetchBNBBalance = async pk => {\n    try {\n      const wallet = new Wallet(pk, provider);\n      const bal = await provider.getBalance(wallet.address);\n      setBalance(formatEther(bal));\n    } catch (err) {\n      setBalance(\"Error\");\n    }\n  };\n  const fetchTokenBalance = async () => {\n    if (!walletData) return;\n    try {\n      const address = tokenType === \"USDT\" ? USDT_ADDRESS : tokenAddress;\n      const wallet = new Wallet(walletData.privateKey, provider);\n      const contract = new Contract(address, ERC20_ABI, wallet);\n      const decimals = await contract.decimals();\n      const bal = await contract.balanceOf(wallet.address);\n      setTokenDecimals(decimals);\n      setTokenBalance(formatUnits(bal, decimals));\n    } catch (err) {\n      console.error(\"Fetch token balance failed:\", err);\n      setTokenBalance(\"N/A\");\n    }\n  };\n  const sendTokens = async () => {\n    if (!walletData || !recipient || !amount) return alert(\"Missing fields\");\n    try {\n      const wallet = new Wallet(walletData.privateKey, provider);\n      if (tokenType === \"BNB\") {\n        const tx = await wallet.sendTransaction({\n          to: recipient,\n          value: parseEther(amount)\n        });\n        await tx.wait();\n        alert(\"✅ BNB Sent!\");\n      } else {\n        const address = tokenType === \"USDT\" ? USDT_ADDRESS : tokenAddress;\n        const contract = new Contract(address, ERC20_ABI, wallet);\n        const decimals = await contract.decimals();\n        const parsedAmount = parseUnits(amount.replace(/^0+/, \"\"), decimals);\n        const tx = await contract.transfer(recipient, parsedAmount);\n        await tx.wait();\n        alert(\"✅ Token Sent!\");\n      }\n      fetchBNBBalance(wallet.privateKey);\n      fetchTokenBalance();\n    } catch (err) {\n      console.error(\"Transaction failed:\", err);\n      alert(\"❌ Transaction failed\\n\" + ((err === null || err === void 0 ? void 0 : err.reason) || (err === null || err === void 0 ? void 0 : err.message) || \"Unknown error\"));\n    }\n  };\n  const viewTransaction = async () => {\n    try {\n      const tx = await provider.getTransaction(txHashInput);\n      const receipt = await provider.getTransactionReceipt(txHashInput);\n      setTxDetails({\n        ...tx,\n        ...receipt\n      });\n    } catch (err) {\n      alert(\"❌ Failed to fetch tx details\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#111\",\n      color: \"#fff\",\n      padding: \"40px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDD9C Goan Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Wallet name\",\n        value: walletName,\n        onChange: e => setWalletName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateWallet,\n        children: \"Generate Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search wallet name\",\n        value: searchName,\n        onChange: e => setSearchName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadWallet,\n        children: \"Load Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), walletData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDC64 \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: walletData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDD11 \", walletData.privateKey]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDFE6 \", walletData.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCB0 BNB: \", balance !== null && balance !== void 0 ? balance : \"Loading...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchBNBBalance(walletData.privateKey),\n          children: \"Refresh BNB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE80 Send Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: tokenType,\n        onChange: e => setTokenType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BNB\",\n          children: \"BNB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ERC20\",\n          children: \"ERC20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USDT\",\n          children: \"USDT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), tokenType !== \"BNB\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Token address\",\n          value: tokenType === \"ERC20\" ? tokenAddress : USDT_ADDRESS,\n          onChange: e => setTokenAddress(e.target.value),\n          onBlur: fetchTokenBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDFAF Balance: \", tokenBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Recipient\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTokens,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD0D View Tx Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Transaction Hash\",\n        value: txHashInput,\n        onChange: e => setTxHashInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: viewTransaction,\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), txDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\",\n          fontSize: \"14px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 18\n          }, this), \" \", txDetails.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 18\n          }, this), \" \", txDetails.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 18\n          }, this), \" \", txDetails.hash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 18\n          }, this), \" \", txDetails.status === 1 ? \"✅ Success\" : \"❌ Failed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Block:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 18\n          }, this), \" \", txDetails.blockNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 18\n          }, this), \" \", (_txDetails$gasUsed = txDetails.gasUsed) === null || _txDetails$gasUsed === void 0 ? void 0 : _txDetails$gasUsed.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E03oBwNVxfmsRQdIdUqMEaBOIok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Wallet","isAddress","parseEther","formatEther","JsonRpcProvider","Contract","parseUnits","formatUnits","jsxDEV","_jsxDEV","Fragment","_Fragment","ERC20_ABI","provider","USDT_ADDRESS","App","_s","_txDetails$gasUsed","walletName","setWalletName","searchName","setSearchName","walletData","setWalletData","balance","setBalance","recipient","setRecipient","amount","setAmount","tokenType","setTokenType","tokenAddress","setTokenAddress","tokenDecimals","setTokenDecimals","tokenBalance","setTokenBalance","txHashInput","setTxHashInput","txDetails","setTxDetails","generateWallet","trim","alert","wallet","createRandom","newWallet","name","address","privateKey","mnemonic","phrase","fetch","method","headers","body","JSON","stringify","err","console","error","loadWallet","res","data","json","fetchBNBBalance","pk","bal","getBalance","fetchTokenBalance","contract","decimals","balanceOf","sendTokens","tx","sendTransaction","to","value","wait","parsedAmount","replace","transfer","reason","message","viewTransaction","getTransaction","receipt","getTransactionReceipt","style","background","color","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","placeholder","onChange","e","target","onClick","onBlur","marginTop","fontSize","from","hash","status","blockNumber","gasUsed","toString","_c","$RefreshReg$"],"sources":["/Users/tejasvigaonkar/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Wallet,\n  isAddress,\n  parseEther,\n  formatEther,\n  JsonRpcProvider,\n  Contract,\n  parseUnits,\n  formatUnits\n} from \"ethers\";\n\nconst ERC20_ABI = [\n  \"function balanceOf(address) view returns (uint256)\",\n  \"function transfer(address to, uint256 amount) returns (bool)\",\n  \"function decimals() view returns (uint8)\",\n  \"function symbol() view returns (string)\"\n];\n\nconst provider = new JsonRpcProvider(\"https://bsc-testnet.publicnode.com\");\nconst USDT_ADDRESS = \"0x7ef95a0Fe8fE1fBf9fcdAE4D9b62b2d0D8959B8A\"; // BSC testnet USDT\n\nfunction App() {\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [walletData, setWalletData] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenDecimals, setTokenDecimals] = useState(18);\n  const [tokenBalance, setTokenBalance] = useState(\"N/A\");\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n\n  const generateWallet = async () => {\n    if (!walletName.trim()) return alert(\"Enter wallet name\");\n    const wallet = Wallet.createRandom();\n    const newWallet = {\n      name: walletName,\n      address: wallet.address,\n      privateKey: wallet.privateKey,\n      mnemonic: wallet.mnemonic.phrase,\n    };\n\n    try {\n      await fetch(\"http://localhost:5001/api/wallet\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newWallet),\n      });\n      alert(\"✅ Wallet created & saved\");\n      setWalletName(\"\");\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ Wallet save failed\");\n    }\n  };\n\n  const loadWallet = async () => {\n    try {\n      const res = await fetch(`http://localhost:5001/api/wallet/${searchName}`);\n      const data = await res.json();\n      if (data.error) return alert(\"❌ Wallet not found\");\n      setWalletData(data);\n      fetchBNBBalance(data.privateKey);\n    } catch (err) {\n      alert(\"❌ Failed to load wallet\");\n    }\n  };\n\n  const fetchBNBBalance = async (pk) => {\n    try {\n      const wallet = new Wallet(pk, provider);\n      const bal = await provider.getBalance(wallet.address);\n      setBalance(formatEther(bal));\n    } catch (err) {\n      setBalance(\"Error\");\n    }\n  };\n\n  const fetchTokenBalance = async () => {\n    if (!walletData) return;\n    try {\n      const address = tokenType === \"USDT\" ? USDT_ADDRESS : tokenAddress;\n      const wallet = new Wallet(walletData.privateKey, provider);\n      const contract = new Contract(address, ERC20_ABI, wallet);\n\n      const decimals = await contract.decimals();\n      const bal = await contract.balanceOf(wallet.address);\n      setTokenDecimals(decimals);\n      setTokenBalance(formatUnits(bal, decimals));\n    } catch (err) {\n      console.error(\"Fetch token balance failed:\", err);\n      setTokenBalance(\"N/A\");\n    }\n  };\n\n  const sendTokens = async () => {\n    if (!walletData || !recipient || !amount) return alert(\"Missing fields\");\n\n    try {\n      const wallet = new Wallet(walletData.privateKey, provider);\n\n      if (tokenType === \"BNB\") {\n        const tx = await wallet.sendTransaction({\n          to: recipient,\n          value: parseEther(amount),\n        });\n        await tx.wait();\n        alert(\"✅ BNB Sent!\");\n      } else {\n        const address = tokenType === \"USDT\" ? USDT_ADDRESS : tokenAddress;\n        const contract = new Contract(address, ERC20_ABI, wallet);\n        const decimals = await contract.decimals();\n\n        const parsedAmount = parseUnits(amount.replace(/^0+/, \"\"), decimals);\n        const tx = await contract.transfer(recipient, parsedAmount);\n        await tx.wait();\n\n        alert(\"✅ Token Sent!\");\n      }\n\n      fetchBNBBalance(wallet.privateKey);\n      fetchTokenBalance();\n    } catch (err) {\n      console.error(\"Transaction failed:\", err);\n      alert(\"❌ Transaction failed\\n\" + (err?.reason || err?.message || \"Unknown error\"));\n    }\n  };\n\n  const viewTransaction = async () => {\n    try {\n      const tx = await provider.getTransaction(txHashInput);\n      const receipt = await provider.getTransactionReceipt(txHashInput);\n      setTxDetails({ ...tx, ...receipt });\n    } catch (err) {\n      alert(\"❌ Failed to fetch tx details\");\n    }\n  };\n\n  return (\n    <div style={{ background: \"#111\", color: \"#fff\", padding: \"40px\", fontFamily: \"Arial\" }}>\n      <h2>🦜 Goan Wallet</h2>\n\n      <div style={{ marginBottom: \"20px\" }}>\n        <input placeholder=\"Wallet name\" value={walletName} onChange={(e) => setWalletName(e.target.value)} />\n        <button onClick={generateWallet}>Generate Wallet</button>\n      </div>\n\n      <div style={{ marginBottom: \"20px\" }}>\n        <input placeholder=\"Search wallet name\" value={searchName} onChange={(e) => setSearchName(e.target.value)} />\n        <button onClick={loadWallet}>Load Wallet</button>\n      </div>\n\n      {walletData && (\n        <>\n          <div>\n            <p>👤 <b>{walletData.name}</b></p>\n            <p>🔑 {walletData.privateKey}</p>\n            <p>🏦 {walletData.address}</p>\n            <p>💰 BNB: {balance ?? \"Loading...\"}</p>\n            <button onClick={() => fetchBNBBalance(walletData.privateKey)}>Refresh BNB</button>\n          </div>\n\n          <hr />\n          <h3>🚀 Send Tokens</h3>\n          <select value={tokenType} onChange={(e) => setTokenType(e.target.value)}>\n            <option value=\"BNB\">BNB</option>\n            <option value=\"ERC20\">ERC20</option>\n            <option value=\"USDT\">USDT</option>\n          </select>\n\n          {tokenType !== \"BNB\" && (\n            <>\n              <input\n                placeholder=\"Token address\"\n                value={tokenType === \"ERC20\" ? tokenAddress : USDT_ADDRESS}\n                onChange={(e) => setTokenAddress(e.target.value)}\n                onBlur={fetchTokenBalance}\n              />\n              <p>🎯 Balance: {tokenBalance}</p>\n            </>\n          )}\n\n          <input placeholder=\"Recipient\" value={recipient} onChange={(e) => setRecipient(e.target.value)} />\n          <input placeholder=\"Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n          <button onClick={sendTokens}>Send</button>\n\n          <hr />\n          <h3>🔍 View Tx Details</h3>\n          <input placeholder=\"Transaction Hash\" value={txHashInput} onChange={(e) => setTxHashInput(e.target.value)} />\n          <button onClick={viewTransaction}>View</button>\n\n          {txDetails && (\n            <div style={{ marginTop: \"10px\", fontSize: \"14px\" }}>\n              <p><strong>From:</strong> {txDetails.from}</p>\n              <p><strong>To:</strong> {txDetails.to}</p>\n              <p><strong>Hash:</strong> {txDetails.hash}</p>\n              <p><strong>Status:</strong> {txDetails.status === 1 ? \"✅ Success\" : \"❌ Failed\"}</p>\n              <p><strong>Block:</strong> {txDetails.blockNumber}</p>\n              <p><strong>Gas:</strong> {txDetails.gasUsed?.toString()}</p>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
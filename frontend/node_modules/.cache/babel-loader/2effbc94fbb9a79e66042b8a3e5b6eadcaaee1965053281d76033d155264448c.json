{"ast":null,"code":"var _jsxFileName = \"/Users/tejasvigaonkar/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20Abi from \"./erc20Abi.json\"; // Ensure this file has the ERC20 ABI\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [walletName, setWalletName] = useState(\"\");\n  const [wallets, setWallets] = useState({});\n  const [currentWallet, setCurrentWallet] = useState(null);\n  const [bnbBalance, setBnbBalance] = useState(\"0\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenBalance, setTokenBalance] = useState(\"0\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const provider = new ethers.JsonRpcProvider(\"https://data-seed-prebsc-1-s1.binance.org:8545/\");\n  const generateWallet = async () => {\n    const wallet = ethers.Wallet.createRandom();\n    const connectedWallet = wallet.connect(provider);\n    const name = walletName || \"wallet\" + Object.keys(wallets).length;\n    const updated = {\n      ...wallets,\n      [name]: connectedWallet\n    };\n    setWallets(updated);\n    setCurrentWallet({\n      name,\n      wallet: connectedWallet\n    });\n    alert(\"Wallet generated!\");\n  };\n  const loadWallet = () => {\n    const w = wallets[walletName];\n    if (!w) return alert(\"Wallet not found!\");\n    setCurrentWallet({\n      name: walletName,\n      wallet: w\n    });\n  };\n  const refreshBNB = async () => {\n    const bal = await provider.getBalance(currentWallet.wallet.address);\n    setBnbBalance(ethers.formatEther(bal));\n  };\n  const fetchTokenBalance = async () => {\n    const contract = new ethers.Contract(tokenAddress, erc20Abi, provider);\n    const balance = await contract.balanceOf(currentWallet.wallet.address);\n    setTokenBalance(ethers.formatUnits(balance, 18));\n  };\n  const sendTokens = async () => {\n    try {\n      const contract = new ethers.Contract(tokenAddress, erc20Abi, currentWallet.wallet);\n      const gasLimit = await contract.transfer.estimateGas(recipient, ethers.parseUnits(amount, 18));\n      const tx = await contract.transfer(recipient, ethers.parseUnits(amount, 18), {\n        gasLimit\n      });\n      await tx.wait();\n      alert(\"Transaction successful!\\nHash: \" + tx.hash);\n    } catch (error) {\n      console.error(error);\n      alert(\"Transaction failed:\\n\" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#111\",\n      color: \"#fff\",\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDD9C Goan Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: walletName,\n        onChange: e => setWalletName(e.target.value),\n        placeholder: \"Wallet name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateWallet,\n        children: \"Generate Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadWallet,\n        children: \"Load Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), currentWallet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDD10 \", currentWallet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCEC \", currentWallet.wallet.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDE99 BNB: \", bnbBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshBNB,\n        children: \"Refresh BNB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE80 Send Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setTokenAddress(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select ERC20 Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0x787A697324db4AAB...\",\n          children: \"ERC20 Test Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTokenBalance,\n        children: \"Check Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", tokenBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient address\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTokens,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sxwQFj1oarmXvYKhV//aVByAEkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","erc20Abi","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","walletName","setWalletName","wallets","setWallets","currentWallet","setCurrentWallet","bnbBalance","setBnbBalance","tokenAddress","setTokenAddress","tokenBalance","setTokenBalance","recipient","setRecipient","amount","setAmount","provider","JsonRpcProvider","generateWallet","wallet","Wallet","createRandom","connectedWallet","connect","name","Object","keys","length","updated","alert","loadWallet","w","refreshBNB","bal","getBalance","address","formatEther","fetchTokenBalance","contract","Contract","balance","balanceOf","formatUnits","sendTokens","gasLimit","transfer","estimateGas","parseUnits","tx","wait","hash","error","console","message","style","background","color","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","type","_c","$RefreshReg$"],"sources":["/Users/tejasvigaonkar/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20Abi from \"./erc20Abi.json\"; // Ensure this file has the ERC20 ABI\n\nconst App = () => {\n  const [walletName, setWalletName] = useState(\"\");\n  const [wallets, setWallets] = useState({});\n  const [currentWallet, setCurrentWallet] = useState(null);\n  const [bnbBalance, setBnbBalance] = useState(\"0\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenBalance, setTokenBalance] = useState(\"0\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const provider = new ethers.JsonRpcProvider(\"https://data-seed-prebsc-1-s1.binance.org:8545/\");\n\n  const generateWallet = async () => {\n    const wallet = ethers.Wallet.createRandom();\n    const connectedWallet = wallet.connect(provider);\n    const name = walletName || \"wallet\" + Object.keys(wallets).length;\n    const updated = { ...wallets, [name]: connectedWallet };\n    setWallets(updated);\n    setCurrentWallet({ name, wallet: connectedWallet });\n    alert(\"Wallet generated!\");\n  };\n\n  const loadWallet = () => {\n    const w = wallets[walletName];\n    if (!w) return alert(\"Wallet not found!\");\n    setCurrentWallet({ name: walletName, wallet: w });\n  };\n\n  const refreshBNB = async () => {\n    const bal = await provider.getBalance(currentWallet.wallet.address);\n    setBnbBalance(ethers.formatEther(bal));\n  };\n\n  const fetchTokenBalance = async () => {\n    const contract = new ethers.Contract(tokenAddress, erc20Abi, provider);\n    const balance = await contract.balanceOf(currentWallet.wallet.address);\n    setTokenBalance(ethers.formatUnits(balance, 18));\n  };\n\n  const sendTokens = async () => {\n    try {\n      const contract = new ethers.Contract(tokenAddress, erc20Abi, currentWallet.wallet);\n      const gasLimit = await contract.transfer.estimateGas(recipient, ethers.parseUnits(amount, 18));\n      const tx = await contract.transfer(recipient, ethers.parseUnits(amount, 18), {\n        gasLimit,\n      });\n      await tx.wait();\n      alert(\"Transaction successful!\\nHash: \" + tx.hash);\n    } catch (error) {\n      console.error(error);\n      alert(\"Transaction failed:\\n\" + error.message);\n    }\n  };\n\n  return (\n    <div style={{ background: \"#111\", color: \"#fff\", padding: 20, fontFamily: \"Arial\" }}>\n      <h2>🦜 Goan Wallet</h2>\n\n      <div>\n        <input\n          value={walletName}\n          onChange={(e) => setWalletName(e.target.value)}\n          placeholder=\"Wallet name\"\n        />\n        <button onClick={generateWallet}>Generate Wallet</button>\n        <button onClick={loadWallet}>Load Wallet</button>\n      </div>\n\n      {currentWallet && (\n        <>\n          <h3>🔐 {currentWallet.name}</h3>\n          <p>📬 {currentWallet.wallet.address}</p>\n          <p>🪙 BNB: {bnbBalance}</p>\n          <button onClick={refreshBNB}>Refresh BNB</button>\n\n          <hr />\n\n          <h3>🚀 Send Tokens</h3>\n          <select onChange={(e) => setTokenAddress(e.target.value)}>\n            <option value=\"\">Select ERC20 Token</option>\n            <option value=\"0x787A697324db4AAB...\">ERC20 Test Token</option>\n            {/* Add other tokens here */}\n          </select>\n          <button onClick={fetchTokenBalance}>Check Balance</button>\n          <p>Balance: {tokenBalance}</p>\n\n          <input\n            type=\"text\"\n            placeholder=\"Recipient address\"\n            value={recipient}\n            onChange={(e) => setRecipient(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button onClick={sendTokens}>Send</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
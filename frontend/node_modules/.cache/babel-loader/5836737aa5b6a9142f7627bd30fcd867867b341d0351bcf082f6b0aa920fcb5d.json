{"ast":null,"code":"var _jsxFileName = \"/Users/tejasvigaonkar/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Wallet, isAddress, JsonRpcProvider, Contract, formatUnits } from \"ethers\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERC20_ABI = [\"function balanceOf(address) view returns (uint256)\", \"function decimals() view returns (uint8)\"];\nconst provider = new JsonRpcProvider(\"https://bsc-testnet-dataseed.bnbchain.org\");\nconst TOKEN_ADDRESSES = {\n  USDT: \"0x787A697324dbA4AB965C58CD33c13ff5eeA6295F\",\n  USDC: \"0x342e3aA1248AB77E319e3331C6fD3f1F2d4B36B1\"\n};\nfunction App() {\n  _s();\n  const [walletData, setWalletData] = useState(null);\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [balances, setBalances] = useState({\n    BNB: \"Loading...\",\n    USDT: \"N/A\",\n    USDC: \"N/A\"\n  });\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n  const [ledger, setLedger] = useState([]);\n  const [loading, setLoading] = useState({});\n  const [showPrivate, setShowPrivate] = useState(false);\n  const [showQR, setShowQR] = useState(true);\n  const qrRef = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLogin, setIsLogin] = useState(true);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const setLoader = (key, value) => setLoading(prev => ({\n    ...prev,\n    [key]: value\n  }));\n  const notify = (msg, type = \"info\") => toast[type](msg);\n  const apiFetch = async (url, options = {}) => {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...options.headers\n    };\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    const res = await fetch(url, {\n      ...options,\n      headers\n    });\n    if (!res.ok) {\n      if (res.status === 404) {\n        throw new Error('API endpoint not found. Is the server running?');\n      }\n      try {\n        const errorData = await res.json();\n        throw new Error(errorData.error || 'An unknown error occurred.');\n      } catch (jsonError) {\n        throw new Error(`Request failed with status: ${res.status}`);\n      }\n    }\n    // Handle cases where the response might be empty\n    const text = await res.text();\n    return text ? JSON.parse(text) : {};\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    if (!isLogin && password !== confirmPassword) {\n      return notify(\"❌ Passwords do not match!\", \"error\");\n    }\n    const endpoint = isLogin ? \"login\" : \"register\";\n    setLoader(\"auth\", true);\n    try {\n      const data = await apiFetch(`http://localhost:5001/api/auth/${endpoint}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (isLogin) {\n        localStorage.setItem(\"token\", data.token);\n        setToken(data.token);\n        notify(\"✅ Logged in successfully!\", \"success\");\n      } else {\n        notify(\"✅ Registered successfully! Please log in.\", \"success\");\n        setIsLogin(true);\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      }\n    } catch (error) {\n      notify(`❌ ${error.message}`, \"error\");\n    } finally {\n      setLoader(\"auth\", false);\n    }\n  };\n\n  // The rest of the App.js file is correct and requires no changes...\n  const handleLogout = () => {/* ... */};\n  const generateAndSaveWallet = async () => {/* ... */};\n  const fetchWalletByName = async () => {/* ... */};\n  const fetchAllBalances = async address => {/* ... */};\n  const sendTokens = async () => {/* ... */};\n  const fetchLedger = async address => {/* ... */};\n  const verifyTransaction = async hash => {/* ... */};\n  const fetchTransactionDetails = async () => {/* ... */};\n  const copyAddress = () => {/* ... */};\n  const downloadQR = () => {/* ... */};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kJvsRl7hCp5QEJ/HTwbVlafAnjI=\");\n_c = App;\nconst styles = {/* styles object is correct and requires no changes */};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Wallet","isAddress","JsonRpcProvider","Contract","formatUnits","QRCodeCanvas","ToastContainer","toast","jsxDEV","_jsxDEV","ERC20_ABI","provider","TOKEN_ADDRESSES","USDT","USDC","App","_s","walletData","setWalletData","walletName","setWalletName","searchName","setSearchName","recipient","setRecipient","amount","setAmount","tokenType","setTokenType","balances","setBalances","BNB","txHashInput","setTxHashInput","txDetails","setTxDetails","ledger","setLedger","loading","setLoading","showPrivate","setShowPrivate","showQR","setShowQR","qrRef","username","setUsername","password","setPassword","token","setToken","localStorage","getItem","isLogin","setIsLogin","confirmPassword","setConfirmPassword","showPassword","setShowPassword","setLoader","key","value","prev","notify","msg","type","apiFetch","url","options","headers","res","fetch","ok","status","Error","errorData","json","error","jsonError","text","JSON","parse","handleAuth","e","preventDefault","endpoint","data","method","body","stringify","setItem","message","handleLogout","generateAndSaveWallet","fetchWalletByName","fetchAllBalances","address","sendTokens","fetchLedger","verifyTransaction","hash","fetchTransactionDetails","copyAddress","downloadQR","style","styles","container","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tejasvigaonkar/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Wallet,\n  isAddress,\n  JsonRpcProvider,\n  Contract,\n  formatUnits,\n} from \"ethers\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst ERC20_ABI = [\n  \"function balanceOf(address) view returns (uint256)\",\n  \"function decimals() view returns (uint8)\",\n];\n\nconst provider = new JsonRpcProvider(\"https://bsc-testnet-dataseed.bnbchain.org\");\n\nconst TOKEN_ADDRESSES = {\n  USDT: \"0x787A697324dbA4AB965C58CD33c13ff5eeA6295F\",\n  USDC: \"0x342e3aA1248AB77E319e3331C6fD3f1F2d4B36B1\",\n};\n\nfunction App() {\n  const [walletData, setWalletData] = useState(null);\n  const [walletName, setWalletName] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenType, setTokenType] = useState(\"BNB\");\n  const [balances, setBalances] = useState({ BNB: \"Loading...\", USDT: \"N/A\", USDC: \"N/A\" });\n  const [txHashInput, setTxHashInput] = useState(\"\");\n  const [txDetails, setTxDetails] = useState(null);\n  const [ledger, setLedger] = useState([]);\n  const [loading, setLoading] = useState({});\n  const [showPrivate, setShowPrivate] = useState(false);\n  const [showQR, setShowQR] = useState(true);\n  const qrRef = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLogin, setIsLogin] = useState(true);\n  \n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n\n  const setLoader = (key, value) => setLoading((prev) => ({ ...prev, [key]: value }));\n  const notify = (msg, type = \"info\") => toast[type](msg);\n\n  const apiFetch = async (url, options = {}) => {\n    const headers = { \"Content-Type\": \"application/json\", ...options.headers };\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    const res = await fetch(url, { ...options, headers });\n    if (!res.ok) {\n        if (res.status === 404) {\n            throw new Error('API endpoint not found. Is the server running?');\n        }\n        try {\n            const errorData = await res.json();\n            throw new Error(errorData.error || 'An unknown error occurred.');\n        } catch (jsonError) {\n            throw new Error(`Request failed with status: ${res.status}`);\n        }\n    }\n    // Handle cases where the response might be empty\n    const text = await res.text();\n    return text ? JSON.parse(text) : {};\n  };\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    if (!isLogin && password !== confirmPassword) {\n      return notify(\"❌ Passwords do not match!\", \"error\");\n    }\n    \n    const endpoint = isLogin ? \"login\" : \"register\";\n    setLoader(\"auth\", true);\n    try {\n      const data = await apiFetch(`http://localhost:5001/api/auth/${endpoint}`, {\n        method: \"POST\",\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (isLogin) {\n        localStorage.setItem(\"token\", data.token);\n        setToken(data.token);\n        notify(\"✅ Logged in successfully!\", \"success\");\n      } else {\n        notify(\"✅ Registered successfully! Please log in.\", \"success\");\n        setIsLogin(true);\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      }\n    } catch (error) {\n      notify(`❌ ${error.message}`, \"error\");\n    } finally {\n      setLoader(\"auth\", false);\n    }\n  };\n\n  // The rest of the App.js file is correct and requires no changes...\n  const handleLogout = () => { /* ... */ };\n  const generateAndSaveWallet = async () => { /* ... */ };\n  const fetchWalletByName = async () => { /* ... */ };\n  const fetchAllBalances = async (address) => { /* ... */ };\n  const sendTokens = async () => { /* ... */ };\n  const fetchLedger = async (address) => { /* ... */ };\n  const verifyTransaction = async (hash) => { /* ... */ };\n  const fetchTransactionDetails = async () => { /* ... */ };\n  const copyAddress = () => { /* ... */ };\n  const downloadQR = () => { /* ... */ };\n\n  return (\n    <div style={styles.container}>\n        {/* The entire JSX render tree is correct and requires no changes... */}\n        {/* It will now work because the backend will be running correctly. */}\n    </div>\n  );\n}\n\nconst styles = { /* styles object is correct and requires no changes */ };\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}